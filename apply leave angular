import { Component, OnInit } from '@angular/core';
import {ModelLeave} from '../ModelLeave'
import {EmployeeService} from '../employee.service';
import { NgForm } from "@angular/forms";
import {Router} from '@angular/router';

@Component({
  selector: 'app-apply-leave',
  templateUrl: './apply-leave.component.html',
  styleUrls: ['./apply-leave.component.css']
})
export class ApplyLeaveComponent implements OnInit {

  empId: number;
  model=new ModelLeave();
  msg:String;
  isValidFormSubmitted = false;
  constructor(private router:Router, public applyLeaveService:EmployeeService) {
    this.model.empId=parseInt(localStorage.getItem("empid"));
    alert(this.model.empId);
   }

   calculateDays() {
    let date1: string=this.model.fromDate.toString();
    let date2: string=this.model.toDate.toString();
    let diffInMs: number = Date.parse(date2) - Date.parse(date1);
    let diffInHours: number = diffInMs / 1000 / 60 / 60/24;
    this.model.noOfDays=diffInHours + 1;
 
    }

    applyLeave(form: NgForm)
    {
        this.isValidFormSubmitted=false;
        if(form.invalid){
       //     alert("Invalid");
         return; 
      }  

      //  console.log ('end date component' + this.model.toDate)
        this.applyLeaveService.applyLeave(this.model).subscribe(
        
            d => {
              alert("Hi");
                this.msg=d;
                alert(this.msg);
            },
            err => { 
                this.msg=err;
                alert(this.msg);
               // console.log(err);
            }
        )
        // this.isValidFormSubmitted = true;
        // setTimeout(() => {
        //     this.router.navigate(['/dashboard'])
        //   }
        //   , 3000);
          
    }


  ngOnInit() {
  }

}

appcomponent.html
<p>
  apply-leave works!
</p>

<body>
    <h1 style= "color:rgb(12, 170, 233);text-align:center;"><b>APPLY LEAVE</b> </h1>
<div style="text-align:center">
        <form #userForm="ngForm" (ngSubmit)="applyLeave(userForm)"> 

            <div class="form-group">
                
             <label for= "empId"><b><font size="4">Employee ID :</font></b></label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
             <input type="number" required="required" [(ngModel)]="model.empId" name="empId" #empId="ngModel" readonly  >  
             
         </div>

        <div class="form-group">
               
            <label for= "fromDate"><b><font size="4">Start Date :</font></b></label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <input type="Date" required="required" [(ngModel)]="model.fromDate" name="fromDate" #fromDate="ngModel"  >  
            <div *ngIf="fromDate.invalid && userForm.submitted && !isValidFormSubmitted"  [ngClass] = "'error'"> 
                  <h6>Start Date is Required.</h6>
                 </div>
        </div>
        <div class= "form-group">
                <label for= "toDate"><b><font size="4">End Date :</font>&nbsp;</b> </label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <input type = "Date" class= "form-control"
                id = "toDate" required="required"
                [(ngModel)]= "model.toDate" name="toDate" #toDate="ngModel" (change)="calculateDays()">
                <div *ngIf="toDate.invalid && userForm.submitted && !isValidFormSubmitted"  [ngClass] = "'error'"> 
                       <h6>End Date is Required.</h6> 
                      </div>
            </div>
            <div class="form-group">
                    <label for="leaveType"><b><font size="4">Leave Type :</font></b></label> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <select [(ngModel)]="model.leaveType" name="leaveType" required="required" #leaveType="ngModel">
                        <option value="EL">EL</option>
                    </select>
            </div>
            <div class= "form-group">
                    <label for= "noOfDays"><b><font size="4">Number of Days :</font></b> </label>
                    <input type = "number" class= "form-control"
                    id = "noOfDays" required="required"
                    [(ngModel)]= "model.noOfDays" name="noOfDays" #noOfDays="ngModel" >
                    <div *ngIf="noOfDays.invalid && userForm.submitted && !isValidFormSubmitted"  [ngClass] = "'error'"> 
                            <h6>Leave Days is Required.</h6> 
                           </div>
                </div>
            <div class= "form-group">
                    <label for= "reason"><b><font size="4">Leave Reason :</font> </b></label>&nbsp;&nbsp;&nbsp;
                    <input type="text" class= "form-control" size="30"
                    id = "reason" required="required"
                    [(ngModel)]= "model.reason" name="reason" #reason="ngModel">
                    <div *ngIf="reason.invalid && userForm.submitted && !isValidFormSubmitted"  [ngClass] = "'error'"> 
                            <h6>Reason is Required.</h6> 
                           </div>
                </div>
                <button class=button>Apply</button>
                <input type="button" class="button" value="Cancel" (click)="cancel()">
                <h3 *ngIf="isValidFormSubmitted == true">STATUS: {{this.msg}}</h3>
        </form>
   

employeeservice
 applyLeave(model:ModelLeave):Observable<String>{
    
    //alert(model.fromDate + " " +model.toDate + " " +model.reason + " " +model.noOfDays);
    return this.http.post('http://localhost:8080/ftp19/api/employees/apply/'+model.empId,model) 
    
     .map(response=>response.text())
     .catch((error:any) => Observable.throw(error.toString() || 'Server error'));
   }
